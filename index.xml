<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Xun's Blog</title><link>https://fallingxun.github.io/</link><description>Recent content on Xun's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 05 Apr 2023 09:00:00 +0800</lastBuildDate><atom:link href="https://fallingxun.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>图形学篇 — 阴影</title><link>https://fallingxun.github.io/post/render/graphics/graphics_shadow/</link><pubDate>Wed, 05 Apr 2023 09:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/render/graphics/graphics_shadow/</guid><description>&lt;p>真实世界中，伴随着光的存在，阴影也会同步出现。因此图形学中，为了让物体看起来更加真实，阴影是不可或缺的。&lt;/p></description></item><item><title>Unity篇 — Shader</title><link>https://fallingxun.github.io/post/unity/shader/shader/</link><pubDate>Mon, 06 Mar 2023 20:30:00 +0800</pubDate><guid>https://fallingxun.github.io/post/unity/shader/shader/</guid><description>&lt;p>Shader相关字段、方法记录。&lt;/p></description></item><item><title>Unity篇 — 事件系统</title><link>https://fallingxun.github.io/post/unity/ugui/eventsystem/</link><pubDate>Sun, 29 Jan 2023 09:24:00 +0800</pubDate><guid>https://fallingxun.github.io/post/unity/ugui/eventsystem/</guid><description>&lt;p>Unity 中各种点击、拖拽的交互响应是不可或缺的。在 UGUI 中，使用了 EventSystem 进行管理。&lt;/p></description></item><item><title>Unity篇 — 定制化变体</title><link>https://fallingxun.github.io/post/unity/customizedvariant/customizedvariant/</link><pubDate>Tue, 29 Nov 2022 09:24:00 +0800</pubDate><guid>https://fallingxun.github.io/post/unity/customizedvariant/customizedvariant/</guid><description>&lt;p>定制化变体工具。能对现有的预制体，定制一套对应的变体预制体。整套变体都沿用对应原预制体的信息，并且可以进行编辑修改。&lt;/p></description></item><item><title>图形学篇 — 贝塞尔曲线</title><link>https://fallingxun.github.io/post/render/graphics/graphics_beziercurves/</link><pubDate>Fri, 30 Sep 2022 14:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/render/graphics/graphics_beziercurves/</guid><description>&lt;p>贝塞尔曲线是计算机图形中常用的绘制曲线的方法，能根据多个点的位置绘制出光滑的曲线。&lt;/p></description></item><item><title>图形学篇 — 抗锯齿</title><link>https://fallingxun.github.io/post/render/graphics/graphics_anti-aliasing/</link><pubDate>Wed, 28 Sep 2022 10:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/render/graphics/graphics_anti-aliasing/</guid><description>&lt;p>屏幕显示画面是以像素格子输出显示的，往往边缘会出现一些锯齿状的效果，抗锯齿技术则可以较好地解决这种表现问题。&lt;/p></description></item><item><title>图形学篇 — 重心坐标插值</title><link>https://fallingxun.github.io/post/render/graphics/graphics_barycentricinterpolation/</link><pubDate>Tue, 27 Sep 2022 10:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/render/graphics/graphics_barycentricinterpolation/</guid><description>&lt;p>在几何中，重心坐标有特别的性质，相应也有许多用途，其中重心坐标插值在图形学中也有广泛应用。&lt;/p></description></item><item><title>图形学篇 — 变换</title><link>https://fallingxun.github.io/post/render/graphics/graphics_transform/</link><pubDate>Mon, 26 Sep 2022 09:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/render/graphics/graphics_transform/</guid><description>&lt;p>变换，指将数据通过一定的规则进行转换，通常可以用矩阵来进行表示。&lt;/p></description></item><item><title>算法篇 — KMP 字符串匹配</title><link>https://fallingxun.github.io/post/algorithm/algorithm_kmp/</link><pubDate>Sun, 25 Sep 2022 17:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/algorithm/algorithm_kmp/</guid><description>&lt;p>字符串匹配，通常会使用暴力匹配算法来进行。而KMP算法是一种改进的字符串匹配算法，在字符串的匹配上通常有较好的表现。&lt;/p></description></item><item><title>算法篇 — 曲面细分（Mesh Subdivision）</title><link>https://fallingxun.github.io/post/algorithm/algorithm_meshsubdivision/</link><pubDate>Mon, 20 Jun 2022 10:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/algorithm/algorithm_meshsubdivision/</guid><description>&lt;p>出于性能考虑，模型的面数一般都会有一定限制。然而，当靠近观察时，就能明显看到有很多不光滑的地方。曲面细分方法，通过将原来的面进行调整，可以使原来的面变得平滑，从而提升表现效果。&lt;/p></description></item><item><title>算法篇 — EDT 欧式距离变换</title><link>https://fallingxun.github.io/post/algorithm/algorithm_edt/</link><pubDate>Mon, 23 May 2022 15:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/algorithm/algorithm_edt/</guid><description>&lt;p>距离变换是计算并标识空间点（对目标点）距离的过程，其中 EDT（Euclidean Distance Transform），欧式距离变换精度高，与实际距离相符，应用更广泛。&lt;/p></description></item><item><title>Shader篇 — 景深</title><link>https://fallingxun.github.io/post/render/shader/shader_depthoffield/</link><pubDate>Mon, 11 Apr 2022 10:20:00 +0800</pubDate><guid>https://fallingxun.github.io/post/render/shader/shader_depthoffield/</guid><description>&lt;p>游戏中常常会使用多种后处理效果来增强表现力，而景深是常见的后处理效果之一。&lt;/p></description></item><item><title>算法篇 — JPS 寻路</title><link>https://fallingxun.github.io/post/algorithm/algorithm_jps/</link><pubDate>Thu, 07 Apr 2022 14:40:00 +0800</pubDate><guid>https://fallingxun.github.io/post/algorithm/algorithm_jps/</guid><description>&lt;p>A* 寻路算法是常用的寻路方法，JPS寻路在A* 的基础上，进行跳点剪枝优化，提升了寻路性能。&lt;/p></description></item><item><title>Lua篇 — (4) Lua热重载</title><link>https://fallingxun.github.io/post/lua/lua_reload/</link><pubDate>Tue, 29 Mar 2022 12:00:00 +0800</pubDate><guid>https://fallingxun.github.io/post/lua/lua_reload/</guid><description>&lt;p>由于lua的弱语言特性，不需要编译即可运行，因此使用lua开发的项目，如果修改lua代码，不需要等待编译的时间，如果修改完能直接重载，则开发效率会更高。&lt;/p></description></item><item><title>Lua篇 — (3) xLua</title><link>https://fallingxun.github.io/post/lua/lua_xlua/</link><pubDate>Thu, 04 Nov 2021 09:42:00 +0800</pubDate><guid>https://fallingxun.github.io/post/lua/lua_xlua/</guid><description>&lt;p>由于很多旧项目是以CSharp开发的，热更时就会遇到难题。而xLua框架的出现，让很多项目能够在改动最小的情况下，支持热更新功能。&lt;/p></description></item><item><title>Lua篇 — (2) ToLua</title><link>https://fallingxun.github.io/post/lua/lua_tolua/</link><pubDate>Wed, 03 Nov 2021 09:42:00 +0800</pubDate><guid>https://fallingxun.github.io/post/lua/lua_tolua/</guid><description>&lt;p>ToLua是很多项目都使用的lua框架，为了更好地使用，需要对框架有比较清晰的认识。&lt;/p></description></item><item><title>Lua篇 — (1) Lua介绍</title><link>https://fallingxun.github.io/post/lua/lua_main/</link><pubDate>Sat, 23 Oct 2021 09:42:00 +0800</pubDate><guid>https://fallingxun.github.io/post/lua/lua_main/</guid><description>&lt;p>随着游戏行业的发展，热更已经成为游戏开发不可或缺的功能。热更有很多方案，lua热更是使用较广泛，也相对稳定的方案。因此，需要对lua有一定程度的了解，对于lua热更框架才能理解得更加透彻。&lt;/p></description></item><item><title>GooglePlay篇 — (3) 离线配置</title><link>https://fallingxun.github.io/post/googleplay/googleplayoffline/</link><pubDate>Wed, 07 Jul 2021 17:56:14 +1900</pubDate><guid>https://fallingxun.github.io/post/googleplay/googleplayoffline/</guid><description>&lt;p>谷歌unity的登录和IAP支付插件，很多设置需要在联网状态下进行，离线状态下，不能直接应用，需要进一步进行处理。&lt;/p></description></item><item><title>GooglePlay篇 — (2) 支付</title><link>https://fallingxun.github.io/post/googleplay/googleplaypay/</link><pubDate>Tue, 06 Jul 2021 16:55:14 +0800</pubDate><guid>https://fallingxun.github.io/post/googleplay/googleplaypay/</guid><description>&lt;p>本文档主要介绍接入Unity的IAP，来实现谷歌的支付功能。&lt;/p></description></item><item><title>GooglePlay篇 — (1) 登录</title><link>https://fallingxun.github.io/post/googleplay/googleplaylogin/</link><pubDate>Mon, 05 Jul 2021 16:54:14 +0800</pubDate><guid>https://fallingxun.github.io/post/googleplay/googleplaylogin/</guid><description>&lt;p>本文档主要是以Google Play SDK for Unity方式接入登录来说明谷歌登录的设置，主要介绍谷歌后台设置、Unity侧设置和安卓设备上的设置等相关情况&lt;/p></description></item><item><title>TMP(TextMeshPro)优化篇 — (2) 描边投影效果</title><link>https://fallingxun.github.io/post/tmp/textmeshoutline/</link><pubDate>Mon, 08 Feb 2021 09:19:01 +0800</pubDate><guid>https://fallingxun.github.io/post/tmp/textmeshoutline/</guid><description>&lt;p>TMP(TextMeshPro)比起原本使用的text，能有更丰富的字体效果表现，基于SDF的实现，可以让字体不会在放大显示后变得模糊，避免了字体贴图的突然扩张。同时，描边和投影效果也不再使用多个text偏移叠加的实现方式，能较大程度减少顶点数量和overdraw。(当前版本 &lt;a href="mailto:com.unity.textmeshpro@1.4.1">com.unity.textmeshpro@1.4.1&lt;/a>)&lt;/p></description></item><item><title>TMP(TextMeshPro)优化篇 — (1) 堆内存</title><link>https://fallingxun.github.io/post/tmp/textmeshprogcoptimize/</link><pubDate>Sun, 07 Feb 2021 15:24:08 +0800</pubDate><guid>https://fallingxun.github.io/post/tmp/textmeshprogcoptimize/</guid><description>&lt;p>TextMeshPro(TMP)是Unity的字体插件，具有很强大的功能，然而使用的过程中会发现堆内存的申请频率和大小都不低，尤其是在UI界面的使用上，每次打开界面，都会使得界面上的TMP进行初始化，随着使用时长的增加，就容易引起GC。（当前版本 &lt;a href="mailto:com.unity.textmeshpro@1.4.1">com.unity.textmeshpro@1.4.1&lt;/a>）。&lt;/p></description></item></channel></rss>